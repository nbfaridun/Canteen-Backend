definitions:
  models.Client:
    properties:
      age:
        type: integer
      balance:
        type: number
      client_category_id:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      last_name:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateClientInput:
    properties:
      age:
        type: integer
      balance:
        type: number
      client_category_id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
    required:
    - age
    - client_category_id
    - first_name
    - gender
    - last_name
    type: object
  models.CreateUserInput:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      username:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - role_id
    - username
    type: object
  models.UpdateClientInput:
    properties:
      age:
        type: integer
      balance:
        type: number
      client_category_id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
    type: object
  models.UpdateUserInput:
    properties:
      email:
        type: string
      first_name:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      username:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Canteen Management System API
  version: "1.0"
paths:
  /clients:
    get:
      consumes:
      - application/json
      description: Get all clients available
      operationId: get-all-clients
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            items:
              $ref: '#/definitions/models.Client'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all clients
      tags:
      - clients
    post:
      consumes:
      - application/json
      description: Create a new client with the provided JSON input
      parameters:
      - description: Client object to be created
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateClientInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new client
      tags:
      - clients
  /clients/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a client based on ID
      operationId: delete-client
      parameters:
      - description: Client ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a client by ID
      tags:
      - clients
    get:
      consumes:
      - application/json
      description: Get a client based on ID
      operationId: get-client-by-id
      parameters:
      - description: Client ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.Client'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a client by ID
      tags:
      - clients
    put:
      consumes:
      - application/json
      description: Update the existing client with the provided JSON input
      parameters:
      - description: Client ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: Client object to be updated
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateClientInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update the existing client
      tags:
      - clients
  /users:
    get:
      consumes:
      - application/json
      description: Get all users available
      operationId: get-all-users
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided JSON input
      parameters:
      - description: User object to be created
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user based on ID
      operationId: delete-user
      parameters:
      - description: User ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user based on ID
      operationId: get-user-by-id
      parameters:
      - description: User ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the existing user with the provided JSON input
      parameters:
      - description: User ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      - description: User object to be updated
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update the existing user
      tags:
      - users
swagger: "2.0"
